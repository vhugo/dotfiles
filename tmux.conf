# set Zsh as your default Tmux shell
set-option -g default-shell /bin/zsh
set-option -g set-titles on

# mouse
set-option -g mouse on
bind -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'select-pane -t=; copy-mode -e; send-keys -M'"  
bind -n WheelDownPane select-pane -t= \; send-keys -M

set -g clock-mode-style 12

# command delay? We dont want that, make it short
set -sg escape-time 5

# start window numbers at 1 to match keyboard order with tmux window order
set -g base-index 1
set-window-option -g pane-base-index 1

# improve colors
set -g default-terminal 'screen-256color'
set-option -g default-command "reattach-to-user-namespace -l $SHELL -l"
# set -g prefix2 C-s

set -g display-time 1000      # slightly longer status messages display time

# renumber windows sequentially after closing any of them
set -g renumber-windows on

# increase scrollback lines
set -g history-limit 10000

# soften status bar color from harsh green to light gray
set -g status-bg '#666666'
set -g status-fg '#aaaaaa'

# status bar stuff
set -g status-left-length 35
set -g status-left '[#S]'
set -g status-right "%a %d/%b - %I:%M %p - #(battery -t -g white)  "

# Use emacs / readline key-bindings at the tmux command prompt `<prefix>:`
set -g status-keys emacs

##################################################################
# Bind
##################################################################

# Tmux uses a 'control key', lets set it to 'Ctrl-a'
# Reason: 'Ctrl-a' is easier to reach than 'Ctrl-b'
unbind C-b
set -g prefix C-a
bind-key -r C-a send-prefix

# act like vim
setw -g mode-keys vi
bind -n C-h select-pane -L
bind -n C-j select-pane -D
bind -n C-k select-pane -U
bind -n C-l select-pane -R
bind-key -r C-h select-window -t :-
bind-key -r C-l select-window -t :+
bind Tab last-window
# move to last active window

bind-key -t vi-copy v begin-selection
bind-key -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"

unbind -t vi-copy Enter
bind-key -t vi-copy Enter copy-pipe "reattach-to-user-namespace pbcopy"

unbind -t vi-copy Space
bind -t vi-copy Space jump-again
bind-key -t vi-copy 0 back-to-indentation

bind y run 'tmux save-buffer - | reattach-to-user-namespace pbcopy '
bind C-y run 'tmux save-buffer - | reattach-to-user-namespace pbcopy '

# Smart pane switching with awareness of vim splits
# See this blog post for additional detail:
# http://robots.thoughtbot.com/post/53022241323/seamlessly-navigate-vim-and-tmux-splits
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?)(diff)?$"'
bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
bind -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

# Navegation
# Make C-j display a selectable list of sessions
bind C-j choose-tree
#bind C-j split-window -v "tmux list-sessions | sed -E 's/:.*$//' | grep -v \"^$(tmux display-message -p '#S')\$\" | fzf-tmux --reverse | xargs tmux switch-client -t"

# quick pane cycling
unbind ^A
bind ^A select-pane -t :.+

# Getting interesting now, we use the vertical and horizontal
# symbols to split the screen
bind \ split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"

bind c new-window -c "#{pane_current_path}"

bind b break-pane -d

# Allow us to reload our Tmux configuration while
# using Tmux
bind r source-file ~/.tmux.conf \; display "Reloaded!"

# Clean scrollbar on current pane
bind -n ^@ send-keys C-l \; clear-history
#bind -n C-; copy-mode

# bind resizing of panes to H,J,K,L (resizes by steps of 10 lines/columns)
bind -n S-Left resize-pane -L 2
bind -n S-Right resize-pane -R 2
bind -n S-Down resize-pane -D 1
bind -n S-Up resize-pane -U 1
bind -n C-Left resize-pane -L 10
bind -n C-Right resize-pane -R 10
bind -n C-Down resize-pane -D 5
bind -n C-Up resize-pane -U 5
